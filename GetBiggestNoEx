using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace BiggestNoEx
{
    class Program
    {
        static void Main(string[] args)
        {
            //int[] numbers = {6, 10, 2};
            int[] numbers = { 3,30,34,5,9 };

            Solution sol = new Solution();
            Console.WriteLine(sol.solution(numbers));
            Console.ReadKey();
        }
    }

/* 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.
예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.
0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요. */
 
    public class Solution
    {
        public string solution(int[] numbers)
        {
            string answer = "";

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                int tempNo = 0;

                for (int j = 0; j < numbers.Length - 1; j++)
                {
                    if (Int32.Parse(numbers[j].ToString().Substring(0, 1)) < Int32.Parse(numbers[j + 1].ToString().Substring(0, 1)))
                    {
                        tempNo = numbers[j];
                        numbers[j] = numbers[j + 1];
                        numbers[j + 1] = tempNo;
                    }
                    else if (Int32.Parse(numbers[j].ToString().Substring(0, 1)) == Int32.Parse(numbers[j + 1].ToString().Substring(0, 1)))
                    {
                        string sA = numbers[j].ToString();
                        string sB = numbers[j + 1].ToString();
                        int maxlen = Math.Max(sA.Length, sB.Length);

                        string tmpA = sA;
                        string tmpB = sB;

                        if (sA.Length < maxlen)
                        {
                            for (int ai = 0; ai < maxlen - sA.Length; ai++)
                            {
                                tmpA += sA[ai].ToString();
                            }
                        }
                        else if (sB.Length < maxlen)
                        {
                            for (int bi = 0; bi < maxlen - sB.Length; bi++)
                            {
                                tmpB += sB[bi].ToString();
                            }
                        }

                        for (int idx = 1; idx < maxlen; idx++)
                        {
                            if (Int32.Parse(tmpA.Substring(idx, 1)) < Int32.Parse(tmpB.Substring(idx, 1)))
                            {
                                tempNo = numbers[j];
                                numbers[j] = numbers[j + 1];
                                numbers[j + 1] = tempNo;
                            }                            
                        }
                    }
                }
                continue;
            }

            foreach (var item in numbers)
                answer += item;

            return answer;
        }
    }
}
